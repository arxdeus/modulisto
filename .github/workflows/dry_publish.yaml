name: Dry Run

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - edited
    branches:
      - 'release/**/**'
  workflow_call:
    inputs:
      package-name:
        required: true
      package-version:
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      flutter-matrix: ${{ steps.flutter-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Flutter SDK version constraints and packages
        id: flutter-matrix
        # Extract the lower bound from pubspec.yaml and the upper bound from .fvmrc
        run: |
          {
            echo 'matrix<<EOF'
            jq -cn  --argjson flutter-version "[\"$(cat .fvmrc | jq -r .flutter)\"]" '$ARGS.named'
            echo EOF
          } >> "$GITHUB_OUTPUT"
      - name: Print output values
        run: |
          echo "matrix=${{ steps.flutter-matrix.outputs.matrix }}"
  code_check:
    uses: arxdeus/github_workflows/.github/workflows/dart_monorepo_code_check.yaml@main
  dry_publish:
    name: "Dry Publish - ${{ strategy.job-index }}"
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.flutter-matrix) }}
    steps:
    - name: "Checkout repository"
      uses: actions/checkout@v4
      with:
        fetch-tags: true
        fetch-depth: 0

    - name: "Setup (Flutter ${{ matrix.flutter-version }})"
      uses: arxdeus/github_workflows/actions/flutter_setup@main
      with:
        flutter-version: ${{ matrix.flutter-version }}

    - name: "Run Dry Publish (${{ inputs.package-name }}, ${{ inputs.package-version }})"
      shell: bash
      if: ${{ github.event_name == 'workflow_call' }}
      run: |
        cd packages/${{ inputs.package-name }} && flutter pub publish --dry-run

    - name: "Run Dry Publish (init on ${{ github.ref }})"
      shell: bash
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        PACKAGE_BRANCH=${{ github.ref }}
        IFS=/ read -r PACKAGE_NAME PACKAGE_VERSION <<< ${PACKAGE_BRANCH//refs\/heads\/release\/}
        cd packages/${PACKAGE_NAME} && flutter pub publish --dry-run
